@page "/player/{playerName}"
@using Newtonsoft.Json
@{
    Layout = null; // Prevents the use of layout for this page
}

@functions {
    private async Task<PlayerInfoResponse?> GetPlayerInfoAsync(string playerName)
    {
        string apiKey = "2fe7354686ed4b60834bc601bc7dc012";
        BungieApiClient bungieApiClient = new BungieApiClient(apiKey);

        var playerInfo = await bungieApiClient.GetPlayerInfoAsync(playerName);
        return playerInfo;
    }
}

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Player Information</title>
</head>
<body>
    <h1>Player Information</h1>
    @if (!string.IsNullOrEmpty(RouteData.Values["PisWeasel"]?.ToString()))
    {
        var playerName = RouteData.Values["PisWeasel"].ToString();

        try
        {
            var playerData = await GetPlayerInfoAsync(playerName);
            if (playerData != null && playerData.Players != null && playerData.Players.Count > 0)
            {
                <p>Membership ID: @playerData.Players[0].MembershipId</p>
            }
            else
            {
                <p>Player not found or an error occurred while retrieving data.</p>
            }
        }
        catch (Exception ex)
        {
            <p>Error: @ex.Message</p>
        }
    }
    else
    {
        <p>Player name not provided.</p>
    }
</body>
</html>
